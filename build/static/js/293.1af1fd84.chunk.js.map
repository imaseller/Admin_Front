{"version":3,"file":"static/js/293.1af1fd84.chunk.js","mappings":"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","sources":["api/Axios.js","api/user/UserGet.js","components/HeaderTitle.js","components/MemberTable.js","components/Paination.js","pages/Member/BlockMemberList.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport const Axios = axios.create({\n  baseURL: \"https://api.stylewh.com\",\n  withCredentials: true,\n});\n\nAxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    if (window.location.pathname === \"auth/login\") {\n      return Promise.reject(error);\n    }\n\n    return Promise.reject(error);\n  }\n);\n","import { Axios } from '../Axios';\n\n/**\n * @param {number} page - 페이지 번호\n * @param {number} limit - 페이지당 항목 수\n * @returns {Promise<Object>} - 유저 목록 데이터와 전체 항목 수를 반환하는 Promise\n */\nexport const UserGet = async (page = 1, limit = 10) => {\n  try {\n    const response = await Axios.get('/user', {\n      params: {\n        page,\n        limit,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching admin list:', error);\n    throw error;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = ({\n  title,\n  searchType,\n  setSearchType,\n  searchTerm,\n  setSearchTerm,\n}) => {\n  return (\n    <HeaderContainer>\n      <HeaderTitle>{title}</HeaderTitle>\n      <SearchContainer>\n        <SearchSelect onChange={(e) => setSearchType(e.target.value)}>\n          <option value='id'>아이디</option>\n          <option value='name'>이름</option>\n          <option value='email'>이메일</option>\n          <option value='role'>권한등급</option>\n        </SearchSelect>\n        <SearchInput\n          type='text'\n          placeholder='Search'\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </SearchContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown5};\n`;\n\nconst HeaderTitle = styled.h1`\n  ${({ theme }) => theme.fonts.heading};\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fonts.heading.fontSize};\n`;\n\nconst SearchInput = styled.input`\n  padding: 10px;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  margin-right: 10px;\n  width: 315px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchSelect = styled.select`\n  padding: 10px;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MemberTable = ({ filteredData, handleEdit }) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>상태</th>\n          <th>회원타입</th>\n          <th>계정(이메일)</th>\n          <th>닉네임</th>\n          <th>생일</th>\n          <th>선호색상</th>\n          <th>선호브랜드</th>\n          <th>최근접속일</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredData.map((member) => (\n          <tr key={member.no}>\n            <td>{member.no}</td>\n            <td>{member.status}</td>\n            <td>{member.memberType}</td>\n            <EmailCell onClick={() => handleEdit(member.no)}>\n              {member.email}\n            </EmailCell>\n            <td>{member.nickname}</td>\n            <td>{member.birthdate}</td>\n            <td>{member.preferredColors.join(', ')}</td>\n            <td>{member.preferredBrands.join(', ')}</td>\n            <td>{new Date(member.lastLogin).toLocaleDateString()}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default MemberTable;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n\n  th,\n  td {\n    padding: 12px 0px;\n    text-align: left;\n    min-width: 60px;\n    border-bottom: 1px solid #ddd;\n    border: 1px solid ${({ theme }) => theme.colors.gray};\n    text-align: center;\n  }\n\n  th {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown1};\n  }\n`;\n\nconst EmailCell = styled.td`\n  color: #007bff;\n  cursor: pointer;\n\n  &:hover {\n    color: #0056b3;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Pagination = ({ page, setPage }) => {\n  return (\n    <PaginationContainer>\n      <PageButton disabled={page === 1} onClick={() => setPage(page - 1)}>\n        «\n      </PageButton>\n      <PageButton>{page}</PageButton>\n      <PageButton onClick={() => setPage(page + 1)}>»</PageButton>\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n`;\n\nconst PageButton = styled.button`\n  padding: 5px 10px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Theme from '../../styles/Theme';\nimport { UserGet } from '../../api/user/UserGet.js';\nimport Header from '../../components/HeaderTitle.js';\nimport MemberTable from '../../components/MemberTable.js';\nimport Pagination from '../../components/Paination.js';\n\nconst BlockMemberList = () => {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchType, setSearchType] = useState('email');\n  const [users, setUsers] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(10);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await UserGet(page, limit);\n        setUsers(data.users || []);\n        setTotal(data.total || 0);\n      } catch (error) {\n        console.error('Error fetching user list:', error);\n      }\n    };\n\n    fetchData();\n  }, [page, limit]);\n\n  const handleEdit = (no) => {\n    navigate(`/user/admin${no}`);\n  };\n\n  const handleRegister = () => {\n    navigate('/user/adminnew');\n  };\n\n  const filteredData = users.filter((item) => {\n    if (searchType === 'email') {\n      return item.email.toLowerCase().includes(searchTerm.toLowerCase());\n    } else if (searchType === 'nickname') {\n      return item.nickname.toLowerCase().includes(searchTerm.toLowerCase());\n    } else if (searchType === 'status') {\n      return item.status.toLowerCase().includes(searchTerm.toLowerCase());\n    }\n    return item;\n  });\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <Content>\n        <Header\n          title='블록회원 목록'\n          searchType={searchType}\n          setSearchType={setSearchType}\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n        />\n        <Container>\n          <TotalCount>총 {total}명</TotalCount>\n          <MemberTable filteredData={filteredData} handleEdit={handleEdit} />\n          <ActionButton onClick={handleRegister}>신규 등록</ActionButton>\n          <Pagination\n            page={page}\n            setPage={setPage}\n            total={total}\n            limit={limit}\n          />\n        </Container>\n      </Content>\n    </ThemeProvider>\n  );\n};\n\nexport default BlockMemberList;\n\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.white};\n  flex: 1;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n`;\n\nconst Container = styled.div`\n  border: 2px solid ${({ theme }) => theme.colors.gray};\n  padding: 20px;\n  overflow-x: auto; /* Enable horizontal scrolling if necessary */\n`;\n\nconst TotalCount = styled.div`\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  margin-bottom: 10px;\n  text-align: left;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nconst ActionButton = styled.button`\n  margin-right: 5px;\n  padding: 5px 10px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n`;\n"],"names":["Axios","axios","create","baseURL","withCredentials","interceptors","response","use","async","window","location","pathname","Promise","reject","error","UserGet","page","arguments","length","undefined","limit","get","params","data","console","_ref","title","searchType","setSearchType","searchTerm","setSearchTerm","_jsxs","HeaderContainer","children","_jsx","HeaderTitle","SearchContainer","SearchSelect","onChange","e","target","value","SearchInput","type","placeholder","styled","div","_ref2","theme","colors","WhiteBrown5","h1","_ref3","fonts","heading","_ref4","black","_ref5","fontSize","input","_ref6","default","_ref7","gray","select","_ref8","_ref9","filteredData","handleEdit","Table","map","member","no","status","memberType","EmailCell","onClick","email","nickname","birthdate","preferredColors","join","preferredBrands","Date","lastLogin","toLocaleDateString","table","WhiteBrown1","td","setPage","PaginationContainer","PageButton","disabled","button","WhiteBrown4","white","BlockMemberList","navigate","useNavigate","useState","users","setUsers","total","setTotal","useEffect","fetchData","filter","item","toLowerCase","includes","ThemeProvider","Theme","Content","Header","Container","TotalCount","MemberTable","ActionButton","handleRegister","Pagination"],"sourceRoot":""}