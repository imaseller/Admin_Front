{"version":3,"file":"static/js/696.066f80c6.chunk.js","mappings":"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","sources":["api/Axios.js","api/user/UserGet.js","components/HeaderTitle.js","components/Paination.js","components/OrderTable.js","pages/Payment/OrderList.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport const Axios = axios.create({\n  baseURL: \"https://api.stylewh.com\",\n  withCredentials: true,\n});\n\nAxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    if (window.location.pathname === \"auth/login\") {\n      return Promise.reject(error);\n    }\n\n    return Promise.reject(error);\n  }\n);\n","import { Axios } from '../Axios';\n\n/**\n * @param {number} page - 페이지 번호\n * @param {number} limit - 페이지당 항목 수\n * @returns {Promise<Object>} - 유저 목록 데이터와 전체 항목 수를 반환하는 Promise\n */\nexport const UserGet = async (page = 1, limit = 10) => {\n  try {\n    const response = await Axios.get('/user', {\n      params: {\n        page,\n        limit,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching admin list:', error);\n    throw error;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = ({\n  title,\n  searchType,\n  setSearchType,\n  searchTerm,\n  setSearchTerm,\n}) => {\n  return (\n    <HeaderContainer>\n      <HeaderTitle>{title}</HeaderTitle>\n      <SearchContainer>\n        <SearchSelect onChange={(e) => setSearchType(e.target.value)}>\n          <option value='id'>아이디</option>\n          <option value='name'>이름</option>\n          <option value='email'>이메일</option>\n          <option value='role'>권한등급</option>\n        </SearchSelect>\n        <SearchInput\n          type='text'\n          placeholder='Search'\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </SearchContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown5};\n`;\n\nconst HeaderTitle = styled.h1`\n  ${({ theme }) => theme.fonts.heading};\n  color: ${({ theme }) => theme.colors.black};\n  font-size: ${({ theme }) => theme.fonts.heading.fontSize};\n`;\n\nconst SearchInput = styled.input`\n  padding: 10px;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  margin-right: 10px;\n  width: 315px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchSelect = styled.select`\n  padding: 10px;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Pagination = ({ page, setPage }) => {\n  return (\n    <PaginationContainer>\n      <PageButton disabled={page === 1} onClick={() => setPage(page - 1)}>\n        «\n      </PageButton>\n      <PageButton>{page}</PageButton>\n      <PageButton onClick={() => setPage(page + 1)}>»</PageButton>\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n`;\n\nconst PageButton = styled.button`\n  padding: 5px 10px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst OrderTable = ({ filteredData, handleEdit }) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>No.</th>\n          <th>신청일</th>\n          <th>닉네임(수령인)</th>\n          <th>제품명/브랜드</th>\n          <th>기간</th>\n          <th>이용날짜</th>\n          <th>사이즈</th>\n          <th>이용금액</th>\n          <th>결제방식</th>\n          <th>상태</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredData.map((order) => (\n          <tr key={order.no}>\n            <td>{order.no}</td>\n            <td>{new Date(order.applicationDate).toLocaleDateString()}</td>{' '}\n            {/* 신청일 */}\n            <td>{order.recipientNickname}</td> {/* 닉네임(수령인) */}\n            <td>\n              {order.productName} / {order.brandName}\n            </td>{' '}\n            {/* 제품명/브랜드 */}\n            <td>{order.duration}</td> {/* 기간 */}\n            <td>{new Date(order.useDate).toLocaleDateString()}</td>{' '}\n            {/* 이용날짜 */}\n            <td>{order.size}</td> {/* 사이즈 */}\n            <td>{order.amount}</td> {/* 이용금액 */}\n            <td>{order.paymentMethod}</td> {/* 결제방식 */}\n            <td>{order.status}</td> {/* 상태 */}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default OrderTable;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n\n  th,\n  td {\n    padding: 12px 0px;\n    text-align: left;\n    min-width: 60px;\n    border-bottom: 1px solid #ddd;\n    border: 1px solid ${({ theme }) => theme.colors.gray};\n    text-align: center;\n  }\n\n  th {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown1};\n  }\n`;\n\nconst EmailCell = styled.td`\n  color: #007bff;\n  cursor: pointer;\n\n  &:hover {\n    color: #0056b3;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Theme from '../../styles/Theme';\nimport { UserGet } from '../../api/user/UserGet.js';\nimport Header from '../../components/HeaderTitle.js';\nimport OrderTable from '../../components/OrderTable.js';\nimport Pagination from '../../components/Paination.js';\n\nconst OrderList = () => {\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchType, setSearchType] = useState('email');\n  const [users, setUsers] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(10);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await UserGet(page, limit);\n        setUsers(data.users || []);\n        setTotal(data.total || 0);\n      } catch (error) {\n        console.error('Error fetching user list:', error);\n      }\n    };\n\n    fetchData();\n  }, [page, limit]);\n\n  const handleEdit = (no) => {\n    navigate(`/user/admin${no}`);\n  };\n\n  const handleRegister = () => {\n    navigate('/user/adminnew');\n  };\n\n  const filteredData = users.filter((item) => {\n    if (searchType === 'email') {\n      return item.email.toLowerCase().includes(searchTerm.toLowerCase());\n    } else if (searchType === 'nickname') {\n      return item.nickname.toLowerCase().includes(searchTerm.toLowerCase());\n    } else if (searchType === 'status') {\n      return item.status.toLowerCase().includes(searchTerm.toLowerCase());\n    }\n    return item;\n  });\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <Content>\n        <Header\n          title='주문 목록'\n          searchType={searchType}\n          setSearchType={setSearchType}\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n        />\n        <Container>\n          <TotalCount>총 {total}명</TotalCount>\n          <OrderTable filteredData={filteredData} handleEdit={handleEdit} />\n          <ActionButton onClick={handleRegister}>신규 등록</ActionButton>\n          <Pagination\n            page={page}\n            setPage={setPage}\n            total={total}\n            limit={limit}\n          />\n        </Container>\n      </Content>\n    </ThemeProvider>\n  );\n};\n\nexport default OrderList;\n\nconst Content = styled.div`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.white};\n  flex: 1;\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n`;\n\nconst Container = styled.div`\n  border: 2px solid ${({ theme }) => theme.colors.gray};\n  padding: 20px;\n  overflow-x: auto; /* Enable horizontal scrolling if necessary */\n`;\n\nconst TotalCount = styled.div`\n  font-size: ${({ theme }) => theme.fonts.default.fontSize};\n  margin-bottom: 10px;\n  text-align: left;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nconst ActionButton = styled.button`\n  margin-right: 5px;\n  padding: 5px 10px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n`;\n"],"names":["Axios","axios","create","baseURL","withCredentials","interceptors","response","use","async","window","location","pathname","Promise","reject","error","UserGet","page","arguments","length","undefined","limit","get","params","data","console","_ref","title","searchType","setSearchType","searchTerm","setSearchTerm","_jsxs","HeaderContainer","children","_jsx","HeaderTitle","SearchContainer","SearchSelect","onChange","e","target","value","SearchInput","type","placeholder","styled","div","_ref2","theme","colors","WhiteBrown5","h1","_ref3","fonts","heading","_ref4","black","_ref5","fontSize","input","_ref6","default","_ref7","gray","select","_ref8","_ref9","setPage","PaginationContainer","PageButton","disabled","onClick","button","WhiteBrown4","white","filteredData","handleEdit","Table","map","order","no","Date","applicationDate","toLocaleDateString","recipientNickname","productName","brandName","duration","useDate","size","amount","paymentMethod","status","table","WhiteBrown1","td","OrderList","navigate","useNavigate","useState","users","setUsers","total","setTotal","useEffect","fetchData","filter","item","email","toLowerCase","includes","nickname","ThemeProvider","Theme","Content","Header","Container","TotalCount","OrderTable","ActionButton","handleRegister","Pagination"],"sourceRoot":""}