{"version":3,"file":"static/js/753.10ebdb68.chunk.js","mappings":"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","sources":["pages/Service/ProductDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Theme from \"../../styles/Theme\";\n\nconst mockProductData = [\n  {\n    id: 806,\n    productName: \"니트 배색 벨티드 집업 원피스\",\n    brand: \"ZOOC\",\n    category: \"원피스\",\n    color: \"Cream\",\n    size: \"44(S)-0 / 55(M)-1 / 66(L)-1 / Free-0\",\n    priceRetail: \"384,300\",\n    rentPrice3: \"40,000\",\n    rentPrice5: \"55,000\",\n    material: \"겉감: 면 53% 나일론 41% 폴리우레탄 6% 안감:폴리에스터100%\",\n    thickness: \"적당\",\n    elasticity: \"약간있음\",\n    lining: \"안감없음\",\n    texture: \"적당\",\n    transparency: \"비침없음\",\n    realSize: {\n      \"44(S)\": { A: 0, B: 0, C: 0, D: 0, E: 0 },\n      \"55(M)\": { A: 37, B: 90, C: 66, D: 60, E: 113 },\n      \"66(L)\": { A: 39, B: 94, C: 70, D: 62, E: 115 },\n    },\n    quantity: {\n      \"44(S)\": 0,\n      \"55(M)\": 1,\n      \"66(L)\": 1,\n      Free: 0,\n    },\n    review: {\n      video: \"\",\n      image: \"\",\n    },\n    thumbnail: \"/image.do?dir=item&img=20230411175710_2669.jpg\",\n    productNumber: \"Z231MSE013\",\n    description: \"가슴부터 허리까지 밴딩소재로 되어있는 캐주얼한 제품입니다.\",\n    useSeason: [\"봄\", \"가을\", \"겨울\"],\n    status: \"시즌상품\",\n    useYn: \"N\",\n    registerDate: \"2023.04.11\",\n  },\n];\n\nconst brands = [\n  { value: \"58\", label: \"S_Blanc\" },\n  { value: \"57\", label: \"CC Collect\" },\n  { value: \"56\", label: \"Tuo\" },\n];\n\nconst categories = [\n  { value: \"C01\", label: \"의류\" },\n  { value: \"C02\", label: \"웨딩\" },\n  { value: \"C03\", label: \"주얼리\" },\n  { value: \"C04\", label: \"가방\" },\n];\n\nconst subCategories = [\n  { value: \"300\", label: \"원피스\" },\n  { value: \"303\", label: \"투피스\" },\n  { value: \"304\", label: \"상의\" },\n  { value: \"305\", label: \"하의\" },\n  { value: \"301\", label: \"정장\" },\n  { value: \"302\", label: \"아우터\" },\n];\n\nconst seasons = [\"봄\", \"여름\", \"가을\", \"겨울\"];\n\nconst ProductDetail = () => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n\n  useEffect(() => {\n    const foundProduct = mockProductData.find(\n      (item) => item.id.toString() === id\n    );\n    setProduct(foundProduct);\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct((prevProduct) => ({ ...prevProduct, [name]: value }));\n  };\n\n  const handleCheckboxChange = (name, value) => {\n    setProduct((prevProduct) => ({\n      ...prevProduct,\n      [name]: prevProduct[name] === value ? \"\" : value,\n    }));\n  };\n\n  const handleSeasonChange = (season) => {\n    setProduct((prevProduct) => ({\n      ...prevProduct,\n      useSeason: prevProduct.useSeason.includes(season)\n        ? prevProduct.useSeason.filter((s) => s !== season)\n        : [...prevProduct.useSeason, season],\n    }));\n  };\n\n  const handleSizeChange = (size, key, value) => {\n    setProduct((prevProduct) => ({\n      ...prevProduct,\n      realSize: {\n        ...prevProduct.realSize,\n        [size]: {\n          ...prevProduct.realSize[size],\n          [key]: value,\n        },\n      },\n    }));\n  };\n\n  const handleQuantityChange = (size, value) => {\n    setProduct((prevProduct) => ({\n      ...prevProduct,\n      quantity: {\n        ...prevProduct.quantity,\n        [size]: value,\n      },\n    }));\n  };\n\n  const handleSubCategoryChange = (value) => {\n    setProduct((prevProduct) => ({\n      ...prevProduct,\n      subCategory: prevProduct.subCategory === value ? \"\" : value,\n    }));\n  };\n\n  if (!product) {\n    return <div>제품을 찾을 수 없습니다.</div>;\n  }\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <Container>\n        <Title>제품 상세정보</Title>\n        <ScrollContainer>\n          <FlexContainer>\n            <LeftSection>\n              <FormGroup>\n                <Label>제품명:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"productName\"\n                  value={product.productName}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>브랜드:</Label>\n                <Select\n                  name=\"brand\"\n                  value={product.brand}\n                  onChange={handleChange}\n                >\n                  {brands.map((brand) => (\n                    <option key={brand.value} value={brand.value}>\n                      {brand.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n              <FormGroup>\n                <Label>분류:</Label>\n                <Select\n                  name=\"category\"\n                  value={product.category}\n                  onChange={handleChange}\n                >\n                  {categories.map((category) => (\n                    <option key={category.value} value={category.value}>\n                      {category.label}\n                    </option>\n                  ))}\n                </Select>\n                <CheckboxGroup>\n                  {subCategories.map((subCategory) => (\n                    <CheckLabel key={subCategory.value}>\n                      <input\n                        type=\"checkbox\"\n                        value={subCategory.value}\n                        checked={product.category === subCategory.value}\n                        onChange={() =>\n                          handleSubCategoryChange(subCategory.value)\n                        }\n                      />\n                      {subCategory.label}\n                    </CheckLabel>\n                  ))}\n                </CheckboxGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label>용도:</Label>\n                <CheckboxGroup>\n                  {seasons.map((season) => (\n                    <CheckLabel key={season}>\n                      <input\n                        type=\"checkbox\"\n                        value={season}\n                        checked={\n                          product.useSeason &&\n                          product.useSeason.includes(season)\n                        }\n                        onChange={() => handleSeasonChange(season)}\n                      />\n                      {season}\n                    </CheckLabel>\n                  ))}\n                </CheckboxGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label>색상:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"color\"\n                  value={product.color}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>가격:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"priceRetail\"\n                  value={product.priceRetail}\n                  onChange={handleChange}\n                  placeholder=\"리테일 가격\"\n                />\n                <Input\n                  type=\"text\"\n                  name=\"rentPrice3\"\n                  value={product.rentPrice3}\n                  onChange={handleChange}\n                  placeholder=\"3회 대여 가격\"\n                />\n                <Input\n                  type=\"text\"\n                  name=\"rentPrice5\"\n                  value={product.rentPrice5}\n                  onChange={handleChange}\n                  placeholder=\"5회 대여 가격\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>제품소재:</Label>\n                <TextArea\n                  name=\"material\"\n                  value={product.material}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </LeftSection>\n            <RightSection>\n              <FormGroup>\n                <Label>실측사이즈:</Label>\n                <SizeGroup>\n                  {Object.entries(product.realSize).map(\n                    ([size, measurements]) => (\n                      <div key={size}>\n                        <span>{size}</span>\n                        {Object.entries(measurements).map(([key, value]) => (\n                          <React.Fragment key={key}>\n                            <LabelSmall>{key}</LabelSmall>\n                            <InputSmall\n                              type=\"number\"\n                              value={value}\n                              onChange={(e) =>\n                                handleSizeChange(size, key, e.target.value)\n                              }\n                            />\n                          </React.Fragment>\n                        ))}\n                      </div>\n                    )\n                  )}\n                </SizeGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label>사이즈 수량:</Label>\n                <SizeQuantityGroup>\n                  {Object.entries(product.quantity).map(([size, qty]) => (\n                    <SizeQuantityRow key={size}>\n                      <span>{size}</span>\n                      <InputSmall\n                        type=\"number\"\n                        value={qty}\n                        onChange={(e) =>\n                          handleQuantityChange(size, e.target.value)\n                        }\n                      />\n                    </SizeQuantityRow>\n                  ))}\n                </SizeQuantityGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label>제품리뷰:</Label>\n                <FileInput type=\"file\" />\n                <ImagePreview>\n                  <img src={product.review.image} alt=\"제품 리뷰 이미지\" />\n                </ImagePreview>\n              </FormGroup>\n              <FormGroup>\n                <Label>제품이미지:</Label>\n                <FileInput type=\"file\" />\n                <ImagePreview>\n                  <img src={product.thumbnail} alt=\"제품 이미지\" />\n                </ImagePreview>\n              </FormGroup>\n              <FormGroup>\n                <Label>노출여부:</Label>\n                <CheckboxGroup>\n                  <CheckLabel>\n                    <input\n                      type=\"checkbox\"\n                      checked={product.useYn === \"Y\"}\n                      onChange={() => handleCheckboxChange(\"useYn\", \"Y\")}\n                    />\n                    노출\n                  </CheckLabel>\n                  <CheckLabel>\n                    <input\n                      type=\"checkbox\"\n                      checked={product.useYn === \"N\"}\n                      onChange={() => handleCheckboxChange(\"useYn\", \"N\")}\n                    />\n                    비노출\n                  </CheckLabel>\n                </CheckboxGroup>\n              </FormGroup>\n              <FormGroup>\n                <Label>설명:</Label>\n                <TextArea\n                  name=\"description\"\n                  value={product.description}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>상태:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"status\"\n                  value={product.status}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>등록일:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"registerDate\"\n                  value={product.registerDate}\n                  readOnly\n                />\n              </FormGroup>\n            </RightSection>\n          </FlexContainer>\n        </ScrollContainer>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default ProductDetail;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nconst ScrollContainer = styled.div`\n  max-height: 90vh;\n  overflow-y: auto;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  padding: 20px;\n  background-color: ${({ theme }) => theme.colors.white};\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LeftSection = styled.div`\n  flex: 1;\n  padding-right: 20px;\n`;\n\nconst RightSection = styled.div`\n  flex: 1;\n  padding-left: 20px;\n  border-left: 1px solid ${({ theme }) => theme.colors.gray};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 820px;\n`;\n\nconst Label = styled.label`\n  font-weight: bold;\n  margin-right: 10px;\n  width: 150px;\n  margin-bottom: 10px;\n`;\n\nconst LabelSmall = styled.label`\n  margin-right: 15px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 10px;\n  max-width: 160px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n`;\n\nconst InputSmall = styled.input`\n  width: 100px;\n  margin-right: 5px;\n  padding: 8px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n`;\n\nconst Select = styled.select`\n  flex: 1;\n  max-width: 160px;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n`;\n\nconst TextArea = styled.textarea`\n  flex: 1;\n  max-width: 525px;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  height: 120px;\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  label {\n    margin-right: 10px;\n    margin-bottom: 5px;\n  }\n  input {\n    margin-right: 5px;\n  }\n`;\n\nconst CheckLabel = styled.label`\n  display: flex;\n  align-items: center;\n  width: 120px;\n`;\n\nconst SizeGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  div {\n    display: flex;\n    align-items: center;\n    margin-bottom: 3px;\n  }\n  span {\n    width: 60px;\n    margin-right: 10px;\n  }\n`;\n\nconst SizeQuantityGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nconst SizeQuantityRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst FileInput = styled.input`\n  margin-top: 10px;\n`;\n\nconst ImagePreview = styled.div`\n  margin-top: 10px;\n  img {\n    max-width: 200px;\n    max-height: 200px;\n    object-fit: cover;\n  }\n`;\n"],"names":["mockProductData","id","productName","brand","category","color","size","priceRetail","rentPrice3","rentPrice5","material","thickness","elasticity","lining","texture","transparency","realSize","A","B","C","D","E","quantity","Free","review","video","image","thumbnail","productNumber","description","useSeason","status","useYn","registerDate","brands","value","label","categories","subCategories","seasons","ProductDetail","useParams","product","setProduct","useState","useEffect","foundProduct","find","item","toString","handleChange","e","name","target","prevProduct","handleCheckboxChange","_jsx","ThemeProvider","theme","Theme","children","_jsxs","Container","Title","ScrollContainer","FlexContainer","LeftSection","FormGroup","Label","Input","type","onChange","Select","map","CheckboxGroup","subCategory","CheckLabel","checked","handleSubCategoryChange","season","includes","filter","s","handleSeasonChange","placeholder","TextArea","RightSection","SizeGroup","Object","entries","_ref","measurements","_ref2","key","React","LabelSmall","InputSmall","handleSizeChange","SizeQuantityGroup","_ref3","qty","SizeQuantityRow","handleQuantityChange","FileInput","ImagePreview","src","alt","readOnly","styled","div","h2","_ref4","colors","black","_ref5","gray","_ref6","white","_ref7","input","_ref8","_ref9","select","_ref10","textarea","_ref11"],"sourceRoot":""}