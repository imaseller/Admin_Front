{"version":3,"file":"static/js/873.007fef77.chunk.js","mappings":"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","sources":["api/Axios.js","api/admin/AdminIdDelete.js","pages/Admin/ManagerDetail.js","api/admin/AdminIdGet.js","api/admin/AdminPost.js","api/admin/AdminIdPut.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport const Axios = axios.create({\n  baseURL: \"https://api.stylewh.com\",\n  withCredentials: true,\n});\n\nAxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    if (window.location.pathname === \"auth/login\") {\n      return Promise.reject(error);\n    }\n\n    return Promise.reject(error);\n  }\n);\n","import { Axios } from '../Axios';\n\n/**\n * 어드민을 삭제하는 API 함수\n * @param {string} id - 삭제할 어드민 ID\n * @returns {Promise<Object>} - 삭제 결과를 반환하는 Promise\n */\nexport const deleteAdmin = async (id) => {\n  try {\n    const response = await Axios.delete(`/admin/${id}`);\n    return response.data; // 삭제 결과 메시지 반환\n  } catch (error) {\n    console.error('Error deleting admin:', error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Theme from '../../styles/Theme';\nimport { getAdminById } from '../../api/admin/AdminIdGet';\nimport { createAdmin } from '../../api/admin/AdminPost.js';\nimport { updateAdmin } from '../../api/admin/AdminIdPut.js';\nimport { deleteAdmin } from '../../api/admin/AdminIdDelete.js';\n\nconst ManagerDetail = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [manager, setManager] = useState({\n    아이디: '',\n    비밀번호: '',\n    비밀번호확인: '',\n    이메일: '',\n    이름: '',\n    권한등급: 'admin',\n    상태: 'active',\n  });\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (id !== 'create') {\n      const fetchManager = async () => {\n        try {\n          const data = await getAdminById(id);\n          if (data.statusCode === 404) {\n            setError('관리자를 찾을 수 없습니다.');\n          } else {\n            setManager({\n              아이디: data.id,\n              이메일: data.email,\n              이름: data.name || '',\n              권한등급: data.role,\n              상태: data.status === 'active' ? '정상' : '블럭',\n            });\n          }\n        } catch (error) {\n          setError('관리자 정보를 가져오는 중 오류가 발생했습니다.');\n        }\n      };\n\n      fetchManager();\n    }\n  }, [id]);\n\n  const handleSave = async () => {\n    if (manager.비밀번호 !== manager.비밀번호확인) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    try {\n      if (id === 'create') {\n        const createdAdmin = await createAdmin({\n          id: manager.아이디,\n          password: manager.비밀번호,\n          email: manager.이메일,\n          name: manager.이름,\n          role: manager.권한등급,\n          status: manager.상태 === '정상' ? 'active' : 'blocked',\n        });\n        navigate('/admin');\n      } else {\n        await updateAdmin(id, {\n          email: manager.이메일,\n          role: manager.권한등급,\n          status: manager.상태 === '정상' ? 'active' : 'blocked',\n        });\n        alert('관리자가 성공적으로 수정되었습니다.');\n        navigate(`/admin/${id}`);\n      }\n    } catch (error) {\n      setError('어드민을 저장하는 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteAdmin(manager.아이디);\n      alert('관리자가 성공적으로 삭제되었습니다.');\n      navigate('/admin');\n    } catch (error) {\n      setError('어드민을 삭제하는 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setManager((prevManager) => ({ ...prevManager, [name]: value }));\n  };\n\n  const handleList = () => {\n    navigate('/admin');\n  };\n\n  if (error) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <Container>\n        <Title>{id === 'create' ? '관리자 등록' : '관리자 수정'}</Title>\n        <FormContainer>\n          <LeftForm>\n            <FormRow>\n              <Label>아이디:</Label>\n              <Input\n                type='text'\n                name='아이디'\n                value={manager.아이디}\n                onChange={handleChange}\n                disabled={id !== 'create'}\n              />\n            </FormRow>\n            <FormRow>\n              <Label>이름:</Label>\n              <Input\n                type='text'\n                name='이름'\n                value={manager.이름}\n                onChange={handleChange}\n              />\n            </FormRow>\n            <FormRow>\n              <Label>비밀번호:</Label>\n              <Input\n                type='password'\n                name='비밀번호'\n                value={manager.비밀번호}\n                onChange={handleChange}\n                disabled={id !== 'create'}\n              />\n            </FormRow>\n            <FormRow>\n              <Label>비밀번호 확인:</Label>\n              <Input\n                type='password'\n                name='비밀번호확인'\n                value={manager.비밀번호확인}\n                onChange={handleChange}\n                disabled={id !== 'create'}\n              />\n            </FormRow>\n            <FormRow>\n              <Label>이메일:</Label>\n              <Input\n                type='email'\n                name='이메일'\n                value={manager.이메일}\n                onChange={handleChange}\n              />\n            </FormRow>\n          </LeftForm>\n          <RightForm>\n            <FormRow>\n              <Label>권한등급:</Label>\n              <Select\n                name='권한등급'\n                value={manager.권한등급}\n                onChange={handleChange}\n              >\n                <option value='admin'>시스템 관리자</option>\n                <option value='service_admin'>서비스 관리자</option>\n              </Select>\n            </FormRow>\n            <FormRow>\n              <Label>상태:</Label>\n              <RadioGroup>\n                <RadioLabel>\n                  <Radio\n                    type='radio'\n                    name='상태'\n                    value='정상'\n                    checked={manager.상태 === '정상'}\n                    onChange={handleChange}\n                  />\n                  정상\n                </RadioLabel>\n                <RadioLabel>\n                  <Radio\n                    type='radio'\n                    name='상태'\n                    value='블럭'\n                    checked={manager.상태 === '블럭'}\n                    onChange={handleChange}\n                  />\n                  블럭\n                </RadioLabel>\n              </RadioGroup>\n            </FormRow>\n          </RightForm>\n        </FormContainer>\n        <ActionRow>\n          <LeftActionButton onClick={handleList}>목록보기</LeftActionButton>\n          <RightActionButtons>\n            <ActionButton onClick={handleSave}>\n              {id === 'create' ? '저장하기' : '수정하기'}\n            </ActionButton>\n            {id !== 'create' && (\n              <ActionButton onClick={handleDelete}>삭제하기</ActionButton>\n            )}\n            <ActionButton onClick={handleList}>저장취소</ActionButton>\n          </RightActionButtons>\n        </ActionRow>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default ManagerDetail;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 16px;\n  margin: 20px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  background-color: ${({ theme }) => theme.colors.WhiteBrown1};\n`;\n\nconst LeftForm = styled.div`\n  flex: 1;\n  max-width: 48%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst RightForm = styled.div`\n  flex: 1;\n  max-width: 48%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst FormRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Label = styled.label`\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.black};\n  min-width: 120px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  font-size: 14px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  width: 100%;\n  max-width: 300px;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  font-size: 14px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 4px;\n  max-width: 300px;\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nconst RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\nconst Radio = styled.input`\n  margin-right: 5px;\n`;\n\nconst ActionRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nconst LeftActionButton = styled.button`\n  padding: 10px 20px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown5};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown6};\n  }\n`;\n\nconst RightActionButtons = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nconst ActionButton = styled.button`\n  padding: 10px 20px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.colors.WhiteBrown4};\n  color: ${({ theme }) => theme.colors.white};\n  border: none;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown5};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors.WhiteBrown6};\n  }\n`;\n","// src/api/admin/AdminIdGet.js\nimport { Axios } from '../Axios';\n\n/**\n * 특정 관리자의 정보를 가져오는 API 함수\n * @param {string} id - 조회할 관리자 ID\n * @returns {Promise<Object>} - 관리자 정보를 반환하는 Promise\n */\nexport const getAdminById = async (id) => {\n  try {\n    const response = await Axios.get(`/admin/${id}`);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      console.error(`Admin not found with id ${id}`);\n      return {\n        statusCode: 404,\n        message: 'Admin not found',\n        error: 'Not Found',\n      };\n    } else {\n      console.error(`Error fetching admin with id ${id}:`, error);\n      throw error;\n    }\n  }\n};\n","import { Axios } from '../Axios';\n\n/**\n * 어드민을 생성하는 API 함수\n * @param {Object} adminData - 생성할 어드민 정보\n * @returns {Promise<Object>} - 생성된 어드민 정보를 반환하는 Promise\n */\nexport const createAdmin = async (adminData) => {\n  try {\n    const response = await Axios.post('/admin', adminData);\n    return response.data; // 생성된 어드민 데이터 반환\n  } catch (error) {\n    console.error('Error creating admin:', error);\n    throw error;\n  }\n};\n","import { Axios } from '../Axios';\n\n/**\n * 특정 관리자를 업데이트하는 API 함수\n * @param {string} id - 업데이트할 관리자 ID\n * @param {Object} updateData - 업데이트할 데이터 (이메일, 권한 등급, 상태)\n * @returns {Promise<Object>} - 업데이트된 관리자 정보를 반환하는 Promise\n */\nexport const updateAdmin = async (id, updateData) => {\n  try {\n    const response = await Axios.put(`/admin/${id}`, updateData);\n    return response.data; // 업데이트된 관리자 데이터 반환\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      console.error(`Admin not found with id ${id}`);\n      throw new Error('관리자를 찾을 수 없습니다.');\n    } else {\n      console.error(`Error updating admin with id ${id}:`, error);\n      throw error;\n    }\n  }\n};\n"],"names":["Axios","axios","create","baseURL","withCredentials","interceptors","response","use","async","window","location","pathname","Promise","reject","error","deleteAdmin","delete","id","data","console","ManagerDetail","useParams","navigate","useNavigate","manager","setManager","useState","아이디","비밀번호","비밀번호확인","이메일","이름","권한등급","상태","setError","useEffect","fetchManager","get","status","statusCode","message","getAdminById","email","name","role","handleChange","e","value","target","prevManager","handleList","_jsx","ErrorMessage","children","ThemeProvider","theme","Theme","_jsxs","Container","Title","FormContainer","LeftForm","FormRow","Label","Input","type","onChange","disabled","RightForm","Select","RadioGroup","RadioLabel","Radio","checked","ActionRow","LeftActionButton","onClick","RightActionButtons","ActionButton","post","adminData","createAdmin","password","updateData","put","Error","updateAdmin","alert","styled","div","h2","_ref","colors","black","_ref2","gray","_ref3","WhiteBrown1","label","_ref4","input","_ref5","select","_ref6","_ref7","button","_ref8","WhiteBrown4","_ref9","white","_ref10","WhiteBrown5","_ref11","WhiteBrown6","_ref12","_ref13","_ref14","_ref15"],"sourceRoot":""}